#!/usr/bin/env nix-shell
#!nix-shell -i bash -p gcc git go go-dependency-manager go2nix pkgconfig

set -euo pipefail

set -x

FILE=${1:-"default.nix"}
PROJECT=$(grep "goPackagePath =" ${FILE} | cut -f2 -d '"')
VERSION=$(grep "version ="       ${FILE} | cut -f2 -d '"')

if grep -q goDeps ${FILE} ; then
  DEPS=$(grep goDeps ${FILE} | cut -f2 -d '=' | cut -f1 -d ';' | sed 's/ //g')
else
  DEPS=deps.nix
  echo "${DEPS} not found. You probably do not need this script."
fi

DEPS=$(dirname ${FILE})/${DEPS}

export TMPDIR=/tmp

t=$(mktemp -d)

pushd $t
export GOPATH=$(pwd)
mkdir -p bin pkg src/${PROJECT}
git clone https://${PROJECT} src/${PROJECT}
cd src/${PROJECT}
git checkout -b build_v${VERSION} v${VERSION}

if [ -f Godeps ] ; then
  gdm restore
  go install
fi

go get

go build

go2nix save

popd
# cp $t/brew.file ${DEPS}.brew
cp $t/src/${PROJECT}/deps.nix ${DEPS}
